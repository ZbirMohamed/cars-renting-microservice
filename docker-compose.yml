services:
  cars-rental-discovery-service:
    build: ./discovery-service
    container_name: car-rental-discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      # CMD C'est une instruction Docker utilisée pour définir la commande par défaut à exécuter lorsque le conteneur démarre.
      #-f est un drapeau de curl qui demande à curl de ne pas afficher de sortie dans le cas où la requête échoue.
      test: ["CMD","curl","-f","http://localhost:8761/actuator/health"]
      interval: 10s
  cars-rental-config-service:
    build: ./config-service
    container_name: car-rental-config-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://cars-rental-discovery-service:8761/eureka
    healthcheck:
      test: [ "CMD","curl","-f","http://localhost:9999/actuator/health" ]
      interval: 10s
    depends_on:
      cars-rental-discovery-service:
        condition: service_healthy
  cars-rental-cars-service:
    build: ./cars-inventaire
    container_name: cars-rental-cars-service
    ports:
      - '8081:8081'
    expose:
      - '8081'
    environment:
      - KEYCLOAK_ISSUER_URI=http://localhost:8080/realms/cars_rental
      - KEYCLOAK_JWK_URI=http://keycloak:8080/realms/cars_rental/protocol/openid-connect/certs
      - DISCOVERY_SERVICE_URL=http://cars-rental-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://cars-rental-config-service:9999
    healthcheck:
      test: [ "CMD","curl","-f","http://localhost:8081/actuator/health" ]
      interval: 10s
    depends_on:
      cars-rental-config-service:
        condition: service_healthy
  cars-rental-inventaire-service:
    build: ./inventaire-service
    container_name: cars-rental-inventaire-service
    ports:
      - '8082:8082'
    expose:
      - '8082'
    environment:
      - KEYCLOAK_ISSUER_URI=http://localhost:8080/realms/cars_rental
      - KEYCLOAK_JWK_URI=http://keycloak:8080/realms/cars_rental/protocol/openid-connect/certs
      - DISCOVERY_SERVICE_URL=http://cars-rental-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://cars-rental-config-service:9999
    healthcheck:
      test: [ "CMD","curl","-f","http://localhost:8082/actuator/health" ]
      interval: 10s
    depends_on:
      cars-rental-cars-service:
        condition: service_healthy
  cars-rental-gateway-service:
    build: ./gateway-service
    container_name: cars-rental-gateway-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      - DISCOVERY_SERVICE_URL=http://cars-rental-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://cars-rental-config-service:9999
    healthcheck:
      test: [ "CMD","curl","-f","http://localhost:8888/actuator/health" ]
      interval: 10s
    depends_on:
      cars-rental-config-service:
        condition: service_healthy
  cars-rental-reservation-service:
    build: ./reservation-service
    container_name: cars-rental-reservation-service
    ports:
      - '8083:8083'
    expose:
      - '8083'
    environment:
      - KEYCLOAK_ISSUER_URI=http://localhost:8080/realms/cars_rental
      - KEYCLOAK_JWK_URI=http://keycloak:8080/realms/cars_rental/protocol/openid-connect/certs
      - DISCOVERY_SERVICE_URL=http://cars-rental-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://cars-rental-config-service:9999
    healthcheck:
      test: [ "CMD","curl","-f","http://localhost:8083/actuator/health" ]
      interval: 10s
    depends_on:
      cars-rental-inventaire-service:
        condition: service_healthy

  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: k1234
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
      test: "exit 0"
  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "80:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: med@gmail.com
      PGADMIN_DEFAULT_PASSWORD: azer
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: k1234
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  pgadmin_data:
